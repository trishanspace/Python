# 3.3[20]: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.

# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова. 
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, 
# либо только русские буквы и заранее известно какой алфавит надо использовать.

# Примеры/Тесты:
# Input:   ноутбук
# Output:  12

# Input:   notebook
# Output:  14

# (*) Примечание.
# Подумайте о том какие структуры данных здесь наиболее удобно использовать, 
# чтобы просто проверять в какую группу попадает буква, а также просто накапливать сумму очков.


dict_eng = {'AEIOULNSTR': 1, 'DG': 2, 'BCMP': 3, 'FHVWY': 4, 'K': 5, 'JX': 8, 'QZ': 10}
# dict_ru = {'АВЕИНОРСТ': 1, 'ДКЛМПУ' : 2, 'БГЁЬЯ' : 3, 'ЙЫ' : 4, 'ЖЗХЦЧ' : 5, 'ШЭЮ' : 8, 'ФЩЪ': 10}

x = 'B'
# x = str(input())
summa = 0
i = 1
value = 0
while i <= len(x):
    i +=1
    for key in dict_eng:
        if x in key:
            value = dict_eng.get(key)
            summa = value + summa
            print(summa)





# def cost_word(x):
#     for key in dict_eng:
#         if x in key:
#             return dict_eng.get(key)

# x = str(input('Введите слово: ')) 
# dict_eng = {'AEIOULNSTR': 1, 'DG': 2, 'BCMP': 3, 'FHVWY': 4, 'K': 5, 'JX': 8, 'QZ': 10}

# print(sum(map(cost_word, x)))


# def cost_word(x):
#     for key in dict_ru:
#         if x in key:
#             return dict_ru.get(key)

# dict_ru = {'АВЕИНОРСТ': 1, 'ДКЛМПУ' : 2, 'БГЁЬЯ' : 3, 'ЙЫ' : 4, 'ЖЗХЦЧ' : 5, 'ШЭЮ' : 8, 'ФЩЪ': 10}

# print(sum(map(cost_word, (input('Введите слово: ')))))